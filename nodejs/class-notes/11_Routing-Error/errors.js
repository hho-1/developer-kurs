'use strict'

const express = require('express')
const app = express()

require('dotenv').config()
const PORT = process.env.PORT || 8000

//?generate and catch error with error handling

/* app.get('/user/:id', (req, res, next) => {
    const id = req.params.id
    console.log(id);

    try {
        if(isNaN(id)){
        //generate error
        throw new Error('Your ID is not a number')
    }
    else{
        res.send({
            message:'ok',
            id: id
        })
    }
    } catch (error) {
        console.log(error);
        next(error)     //goes to errorHandler
    }

    
}) */

//?error control in async functions
// const asyncFunction = async () => {
//     throw new Error('Generated by async function')
// }
// app.get('/async',async (req, res, next) => {
    
//     await asyncFunction().catch(next)         //* goes to errorhandler function
// })


//? Error control with extra module (First you should install npm i express-async-handler)

const asyncHandlerwithModule = require('express-async-handler')
const asyncFunction = async () => {
         throw new Error('Generated by async function')
     }
app.get('/async',asyncHandlerwithModule (async (req, res, next) =>{
    
    await asyncFunction()
}))



const errorHandler = (err, req, res, next) => {     //errorHandler must be at the end of the code block
    console.log('errorHandler');
    const statusCode = res.statusCode ?? 500

    res.send({
        message:err.message,
        cause:err.cause
    })
}
app.use(errorHandler)

app.listen(PORT, ()=> console.log('Server running http://127.0.0.1:' + PORT))